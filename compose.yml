version: '3.8'

services:
  runner:
    image: myoung34/github-runner:latest
    restart: unless-stopped
    environment:
      RUNNER_SCOPE: repo
      ACCESS_TOKEN: ${ACCESS_TOKEN}
      REPO_URL: https://github.com/eryk06/spmarketvt
      RUNNER_NAME_PREFIX: spmarketvt
      LABELS: linux,x64,gpu
      EPHEMERAL: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    networks:
      - spmarketvt-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/configuration/custom_proxy_settings.conf:/etc/nginx/conf.d/custom_proxy_settings.conf
    ports:
      - 80:80
    networks:
      - spmarketvt-network
    depends_on:
      - backend

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      TZ: 'Asia/Ho_Chi_Minh'
      PGTZ: 'Asia/Ho_Chi_Minh'
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data
    networks:
      - spmarketvt-network
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}']
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    container_name: nestjs-api
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    command: pnpm dev
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    networks:
      - spmarketvt-network

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis:/data
    networks:
      - spmarketvt-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5

  redis-adminer:
    image: patrikx3/p3x-redis-ui:latest
    container_name: redis-adminer
    restart: unless-stopped
    ports:
      - 7843:7843
    volumes:
      - /home/user/p3x-redis-ui-settings:/settings
    depends_on:
      - redis
    networks:
      - spmarketvt-network

  adminer:
    container_name: adminer
    image: adminer:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
    depends_on:
      - postgres
      - redis
    environment:
      ADMINER_DESIGN: dracula
      ADMINER_PLUGINS: tables-filter
    networks:
      - spmarketvt-network

networks:
  spmarketvt-network:
    driver: bridge
    name: spmarketvt-network
    external: true

volumes:
  backend:
    name: backend
    driver: local
  docker-nest-postgres:
    name: docker-nest-postgres
    driver: local
  adminer:
    name: adminer
    driver: local
  redis:
    name: redis
    driver: local
  runner:
    name: runner
    driver: local
  redis-adminer:
    name: redis-adminer
    driver: local
